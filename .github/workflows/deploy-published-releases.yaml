name: Release

on:
  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |-
          npm ci
          rm -rf ~/.npmrc

      - name: Build package
        run: |-
          npm run build

      - name: Prepare release
        run: |-
          cp package.json LICENSE README.md build/
          cd build
          sed -i -e "s~\"version\": \"0.0.0-dev\"~\"version\": \"${GITHUB_REF##*/}\"~" package.json

      - name: Publish pre-release to NPM
        if: ${{ github.event.release.prerelease }}
        run: |-
          cd build
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
          npm publish --access public --tag next
        env:
          NPM_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Publish release to NPM
        if: ${{ !github.event.release.prerelease }}
        run: |-
          cd build
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Bundle package
        if: ${{ !github.event.release.prerelease }}
        run: |-
          rm -rf build
          npm run bundle

      - name: Authenticate to GCP
        if: ${{ !github.event.release.prerelease }}
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: 290.0.0
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Deploy to GCS
        if: ${{ !github.event.release.prerelease }}
        env:
          GCLOUD_BUCKET: ${{ secrets.GCLOUD_BUCKET }}
        run: |-
          gsutil -m cp build/plug.min.js "gs://${GCLOUD_BUCKET}/js/v1/lib/plug.js"

          # Allow for faster updates during beta, should be removed once its stable enough to distribute over global cdn
          gsutil -m setmeta -h "Cache-Control: no-cache, no-store, no-transform" "gs://${GCLOUD_BUCKET}/js/v1/lib/plug.js"
